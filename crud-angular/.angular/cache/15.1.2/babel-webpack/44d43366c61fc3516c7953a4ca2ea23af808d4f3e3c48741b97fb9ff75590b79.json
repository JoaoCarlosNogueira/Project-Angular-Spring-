{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CategoryPipe {\n  transform(value, ...args) {\n    switch (value) {\n      case 'front-end':\n        return 'code';\n      case 'back-end':\n        return 'computer';\n    }\n    return null;\n  }\n}\nCategoryPipe.ɵfac = function CategoryPipe_Factory(t) {\n  return new (t || CategoryPipe)();\n};\nCategoryPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"category\",\n  type: CategoryPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,YAAY;EAEvBC,SAAS,CAACC,KAAa,EAAE,GAAGC,IAAe;IAEzC,QAAOD,KAAK;MACV,KAAK,WAAW;QAAE,OAAO,MAAM;MAC/B,KAAK,UAAU;QAAE,OAAO,UAAU;IAAA;IAEpC,OAAO,IAAI;EACb;;AATWF,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;;QAAZA,YAAY;EAAAI;AAAA","names":["CategoryPipe","transform","value","args","pure"],"sourceRoot":"","sources":["E:\\Projeto-Angular-Spring\\crud-angular\\src\\app\\shared\\pipes\\category.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n  name: 'category'\n})\nexport class CategoryPipe implements PipeTransform {\n\n  transform(value: string, ...args: unknown[]): string {\n\n    switch(value){\n      case 'front-end': return 'code';\n      case 'back-end': return 'computer'\n    }\n    return null;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}